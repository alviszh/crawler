server: 
  port: 8698
logging: 
  file: common-microservice-pushserver-9001.log
  level:  
    org.springframework.boot.env.PropertySourcesLoader: INFO
    org.springframework.web: INFO
eureka: 
  client: 
    serviceUrl: 
      defaultZone: http://eurekaserver:8888/eureka/
#数据源：
spring:
  cloud:
    stream:
      bindings:
        carrier_input:                             # 频道名称（根据具体模块来命名，自定义）
          destination: carrier-topic-01    # 对应爬虫端的destination
          group: pushserver_group             # 消费者组订阅是持久的，如果你的应用指定了group，那即便你这个组下的所有应用实例都挂掉了，你的应用也会在重新启动后从未读取过的位置继续读取
          binder: kafka_binder
      binders:
        kafka_binder:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder.brokers: ${kafka.brokers}
            spring.cloud.stream.kafka.binder.zk-nodes: ${kafka.zknodes}
  datasource:
    hikari:
      minimum-idle: ${datasource.jdbc.minIdle}
      maximum-pool-size: ${datasource.jdbc.maxPoolSize}
    driver-class-name: ${datasource.jdbc.driver}
    url: ${datasource.jdbc.url}
    username: ${datasource.jdbc.username}
    password: ${datasource.jdbc.password}
    type: ${datasource.jdbc.type}
  jpa:
    show-sql: false
    hibernate:
        ddl-auto: update
        naming:
          implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
    properties:
      hibernate:
        dialect: ${datasource.jdbc.dialect}
        temp:
          use_jdbc_metadata_defaults: false #此处是为了解决启动时报错createClob()方法为实现

